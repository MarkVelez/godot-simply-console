[gd_scene load_steps=4 format=3 uid="uid://cobxnfwqn6bdh"]

[sub_resource type="GDScript" id="GDScript_f08oq"]
resource_name = "batch_edit"
script/source = "@tool
extends TabBar

signal changes_made

@onready var CommandListRef: ItemList = %List
@onready var CommandTypeRef: OptionButton = %CommandType
@onready var PermissionRef: OptionButton = %PermissionLevel
@onready var CheatsRef: CheckBox = %RequiresCheats
@onready var TargetNameRef: LineEdit = %TargetName
@onready var SelectButtonRef: Button = %SelectAll

var updatedCommandList: bool = false


func init_batch_edit() -> void:
	update_command_list()
	
	# Add permission levels to option button
	for permission in ConsoleDataManager.PermissionLevel:
		PermissionRef.add_item(permission)


func update_command_list() -> void:
	CommandListRef.clear()
	
	for command in ConsoleDataManager.COMMAND_LIST_.keys():
		CommandListRef.add_item(command)


func on_edit_commands_pressed() -> void:
	var type: int = CommandTypeRef.get_selected()
	var permission: int = PermissionRef.get_selected()
	var cheats: bool = CheatsRef.is_pressed()
	var target: String = TargetNameRef.get_text()
	
	for i in CommandListRef.get_selected_items():
		var commandInfo_: Dictionary =\\
			ConsoleDataManager.COMMAND_LIST_[CommandListRef.get_item_text(i)]
		
		commandInfo_[\"target\"] = target
		commandInfo_[\"type\"] = type
		commandInfo_[\"minPermission\"] = permission
		commandInfo_[\"cheats\"] = cheats
	
	reset_tab()
	emit_signal(\"changes_made\")


func reset_tab() -> void:
	CommandListRef.deselect_all()
	CommandTypeRef.select(0)
	PermissionRef.select(0)
	CheatsRef.set_pressed(false)
	TargetNameRef.clear()


func on_remove_commands_pressed() -> void:
	for i in CommandListRef.get_selected_items():
		ConsoleDataManager.COMMAND_LIST_.erase(CommandListRef.get_item_text(i))
	
	update_command_list()
	updatedCommandList = true
	emit_signal(\"changes_made\")


func on_select_all_pressed() -> void:
	var itemCount: int = CommandListRef.get_item_count()
	
	# Deselect all if all items are selected
	if CommandListRef.get_selected_items().size() == itemCount:
		CommandListRef.deselect_all()
		SelectButtonRef.set_text(\"Select All\")
		return
	
	# Select all items
	for i in range(itemCount):
		CommandListRef.select(i, false)
	
	SelectButtonRef.set_text(\"Deselect All\")


func on_list_item_selected(_index, _selected) -> void:
	if CommandListRef.get_selected_items().size() > 0:
		SelectButtonRef.set_text(\"Deselect All\")
	else:
		SelectButtonRef.set_text(\"Select All\")
"

[sub_resource type="StyleBoxFlat" id="StyleBoxFlat_rlw61"]
content_margin_left = 6.0
content_margin_top = 6.0
content_margin_right = 6.0
content_margin_bottom = 6.0
bg_color = Color(0.187176, 0.187176, 0.187176, 1)
corner_radius_top_left = 3
corner_radius_top_right = 3
corner_radius_bottom_right = 3
corner_radius_bottom_left = 3
corner_detail = 5

[sub_resource type="StyleBoxFlat" id="StyleBoxFlat_ba6ah"]
content_margin_left = 6.0
content_margin_top = 6.0
content_margin_right = 6.0
content_margin_bottom = 6.0
bg_color = Color(0.187176, 0.187176, 0.187176, 1)
corner_radius_top_left = 3
corner_radius_top_right = 3
corner_radius_bottom_right = 3
corner_radius_bottom_left = 3
corner_detail = 5

[node name="Batch Edit" type="TabBar"]
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
script = SubResource("GDScript_f08oq")

[node name="VBoxContainer" type="HSplitContainer" parent="."]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
size_flags_horizontal = 3
size_flags_vertical = 3

[node name="CommandList" type="VBoxContainer" parent="VBoxContainer"]
layout_mode = 2

[node name="ScrollContainer" type="ScrollContainer" parent="VBoxContainer/CommandList"]
custom_minimum_size = Vector2(170, 0)
layout_mode = 2
size_flags_vertical = 3

[node name="List" type="ItemList" parent="VBoxContainer/CommandList/ScrollContainer"]
unique_name_in_owner = true
layout_mode = 2
size_flags_horizontal = 3
size_flags_vertical = 3
theme_override_constants/v_separation = 6
theme_override_styles/panel = SubResource("StyleBoxFlat_rlw61")
select_mode = 1

[node name="SelectAll" type="Button" parent="VBoxContainer/CommandList"]
unique_name_in_owner = true
layout_mode = 2
text = "Select All"

[node name="CommandInfo" type="VBoxContainer" parent="VBoxContainer"]
layout_mode = 2
size_flags_horizontal = 3
size_flags_vertical = 3

[node name="PanelContainer" type="PanelContainer" parent="VBoxContainer/CommandInfo"]
layout_mode = 2
size_flags_horizontal = 3
size_flags_vertical = 3
theme_override_styles/panel = SubResource("StyleBoxFlat_ba6ah")

[node name="VBoxContainer" type="VBoxContainer" parent="VBoxContainer/CommandInfo/PanelContainer"]
layout_mode = 2
theme_override_constants/separation = 16

[node name="Type" type="VBoxContainer" parent="VBoxContainer/CommandInfo/PanelContainer/VBoxContainer"]
layout_mode = 2
tooltip_text = "The scope of the command.
A GLOBAL command can call a method from an autoload.
A LOCAL command can only call a method from a node in the current scene tree.

LOCAL commands can be significantly slower compared to GLOBAL commands 
as they do not have a direct reference to the target node. 
Therefore if you have to use a LOCAL command, 
try to put the target node as close to the root as possible and avoid nesting."

[node name="Label" type="Label" parent="VBoxContainer/CommandInfo/PanelContainer/VBoxContainer/Type"]
layout_mode = 2
size_flags_horizontal = 3
text = "Command Type"

[node name="CommandType" type="OptionButton" parent="VBoxContainer/CommandInfo/PanelContainer/VBoxContainer/Type"]
unique_name_in_owner = true
layout_mode = 2
size_flags_horizontal = 3
item_count = 2
selected = 0
popup/item_0/text = "GLOBAL"
popup/item_0/id = 0
popup/item_1/text = "LOCAL"
popup/item_1/id = 1

[node name="Permission" type="VBoxContainer" parent="VBoxContainer/CommandInfo/PanelContainer/VBoxContainer"]
layout_mode = 2
tooltip_text = "The required permission level needed to be able to use the command."

[node name="Label" type="Label" parent="VBoxContainer/CommandInfo/PanelContainer/VBoxContainer/Permission"]
layout_mode = 2
size_flags_horizontal = 3
text = "Minimum Permission"

[node name="PermissionLevel" type="OptionButton" parent="VBoxContainer/CommandInfo/PanelContainer/VBoxContainer/Permission"]
unique_name_in_owner = true
layout_mode = 2
size_flags_horizontal = 3

[node name="Cheats" type="VBoxContainer" parent="VBoxContainer/CommandInfo/PanelContainer/VBoxContainer"]
layout_mode = 2
tooltip_text = "Toggle whether the command requires cheats
to be enabed to be used."

[node name="Label" type="Label" parent="VBoxContainer/CommandInfo/PanelContainer/VBoxContainer/Cheats"]
layout_mode = 2
size_flags_horizontal = 3
text = "Requires Cheats"

[node name="RequiresCheats" type="CheckBox" parent="VBoxContainer/CommandInfo/PanelContainer/VBoxContainer/Cheats"]
unique_name_in_owner = true
layout_mode = 2
size_flags_horizontal = 3
text = "On"

[node name="Target" type="VBoxContainer" parent="VBoxContainer/CommandInfo/PanelContainer/VBoxContainer"]
layout_mode = 2
tooltip_text = "The name of the target node that has the method that the command will call.
Leave empty to use the console directly."

[node name="Label" type="Label" parent="VBoxContainer/CommandInfo/PanelContainer/VBoxContainer/Target"]
layout_mode = 2
size_flags_horizontal = 3
text = "Target Name"

[node name="TargetName" type="LineEdit" parent="VBoxContainer/CommandInfo/PanelContainer/VBoxContainer/Target"]
unique_name_in_owner = true
layout_mode = 2
size_flags_horizontal = 3
caret_blink = true

[node name="HBoxContainer" type="HBoxContainer" parent="VBoxContainer/CommandInfo"]
layout_mode = 2

[node name="EditCommands" type="Button" parent="VBoxContainer/CommandInfo/HBoxContainer"]
layout_mode = 2
size_flags_horizontal = 3
text = "Edit Commands"

[node name="RemoveCommands" type="Button" parent="VBoxContainer/CommandInfo/HBoxContainer"]
layout_mode = 2
size_flags_horizontal = 3
text = "Remove Commands"

[connection signal="multi_selected" from="VBoxContainer/CommandList/ScrollContainer/List" to="." method="on_list_item_selected"]
[connection signal="pressed" from="VBoxContainer/CommandList/SelectAll" to="." method="on_select_all_pressed"]
[connection signal="pressed" from="VBoxContainer/CommandInfo/HBoxContainer/EditCommands" to="." method="on_edit_commands_pressed"]
[connection signal="pressed" from="VBoxContainer/CommandInfo/HBoxContainer/RemoveCommands" to="." method="on_remove_commands_pressed"]
